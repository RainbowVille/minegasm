buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

apply plugin: 'net.minecraftforge.gradle'

apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '0.3.0'
group = 'com.therainbowville.minegasm'
archivesBaseName = 'minegasm'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.18.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                minegasm {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                minegasm {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'minegasm', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                minegasm {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.0'
    implementation 'io.github.blackspherefollower:buttplug4j:3.0.67'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "minegasm",
                "Specification-Vendor"    : "therainbowville",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${archiveVersion}",
                "Implementation-Vendor"   : "therainbowville",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

shadowJar {
    dependencies {
        include(dependency('com.fasterxml.jackson.core:.*:.*'))
        include(dependency('org.springframework:spring-core:.*'))
        include(dependency('com.neovisionaries:nv-websocket-client:.*'))
        include(dependency('io.github.blackspherefollower:.*:.*'))
        include(dependency('org.eclipse.jetty:.*:.*'))

        relocate 'com.fasterxml', 'com.therainbowville.repack.com.fasterxml'
        relocate 'org.springframework', 'com.therainbowville.repack.org.springframework'
        relocate 'com.neovisionaries', 'com.therainbowville.repack.com.neovisionaries'
        relocate 'io.github.blackspherefollower', 'com.therainbowville.repack.io.github.blackspherefollower'
        relocate 'org.eclipse.jetty', 'com.therainbowville.repack.org.eclipse.jetty'


        classifier ''
    }
    archiveClassifier.set('')
    dependsOn(reobf)
}

build.dependsOn shadowJar
